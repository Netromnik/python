# Generated by Django 3.2.5 on 2021-07-05 08:45

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import utils.db.models.fields.color
import utils.fields.file


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Condition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название')),
                ('position', models.IntegerField(default=0, verbose_name='Позиция')),
                ('text', models.TextField(verbose_name='Содержание')),
            ],
            options={
                'verbose_name': 'требование к рекламе',
                'verbose_name_plural': 'требования к рекламе',
                'ordering': ('position',),
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Ф.И.О.')),
                ('job', models.CharField(max_length=255, verbose_name='Должность')),
                ('email', models.EmailField(max_length=254, verbose_name='Почта')),
                ('photo', utils.fields.file.ImageRemovableField(upload_to='img/site/employees', verbose_name='Фотография')),
                ('position', models.PositiveIntegerField(default=0, verbose_name='Позиция')),
                ('is_op', models.BooleanField(default=False, verbose_name='Сотрудник отдела продаж')),
                ('is_head_op', models.BooleanField(default=False, verbose_name='Начальник отдела продаж')),
            ],
            options={
                'verbose_name': 'сотрудник',
                'verbose_name_plural': 'сотрудники',
                'db_table': 'company_employees',
                'ordering': ('position',),
            },
        ),
        migrations.CreateModel(
            name='Faq',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название')),
                ('position', models.IntegerField(default=0, verbose_name='Позиция')),
                ('text', models.TextField(verbose_name='Содержание')),
            ],
            options={
                'verbose_name': 'FAQ',
                'verbose_name_plural': 'FAQ',
                'ordering': ('position',),
            },
        ),
        migrations.CreateModel(
            name='Page',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Раздел')),
                ('image', models.ImageField(blank=True, upload_to='img/site/price', verbose_name='Шаблон')),
                ('position', models.IntegerField(verbose_name='Позиция')),
                ('view_count_day', models.IntegerField(default=0, verbose_name='Количество просмотров за день')),
                ('view_count_week', models.IntegerField(default=0, verbose_name='Количество просмотров за неделю')),
                ('view_count_month', models.IntegerField(default=0, verbose_name='Количество просмотров за месяц')),
                ('unique_user_count_day', models.IntegerField(default=0, verbose_name='Количество уникальных пользователей за день')),
                ('unique_user_count_week', models.IntegerField(default=0, verbose_name='Количество уникальных пользователей за неделю')),
                ('unique_user_count_month', models.IntegerField(default=0, verbose_name='Количество уникальных пользователей за месяц')),
                ('visible', models.BooleanField(db_index=True, default=True, verbose_name='Выводить на сайте')),
                ('device', models.IntegerField(choices=[(1, 'на компьютерах'), (2, 'на мобильных устройствах')], db_index=True, default=1, verbose_name='Тип устройства')),
            ],
            options={
                'verbose_name': 'прайс',
                'verbose_name_plural': 'прайсы',
                'db_table': 'company_page',
                'ordering': ('position',),
            },
        ),
        migrations.CreateModel(
            name='Pricefile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Название')),
                ('slug', models.SlugField(blank=True, null=True, verbose_name='Алиас')),
                ('file', utils.fields.file.FileRemovableField(upload_to='img/site/about/price/', verbose_name='Прайс')),
            ],
            options={
                'verbose_name': 'файл прайса',
                'verbose_name_plural': 'файлы прайсов',
                'db_table': 'company_pricefile',
            },
        ),
        migrations.CreateModel(
            name='Vacancy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='Прием заявок до')),
                ('start_date', models.DateField(auto_now_add=True, verbose_name='Размещена')),
                ('update_date', models.DateField(auto_now=True, verbose_name='Последнее обновление')),
                ('main_requirements', models.TextField(verbose_name='Основные требования')),
                ('optons_requirements', models.TextField(blank=True, verbose_name='Дополнительные требования')),
                ('test', models.IntegerField(choices=[(1, 'не нужно'), (2, 'Высылается дополнительно'), (3, 'На собеседовании')], default=1, verbose_name='Тестовое задание')),
            ],
            options={
                'verbose_name': 'вакансию',
                'verbose_name_plural': 'вакансии',
                'db_table': 'company_vacancy',
            },
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_general', models.BooleanField(default=False, verbose_name='Весь сайт')),
                ('name', models.CharField(max_length=100, verbose_name='Название')),
                ('slug', models.SlugField(max_length=100, unique=True, verbose_name='Алиас')),
                ('position', models.IntegerField(default=0, verbose_name='Позиция')),
                ('statistic_date', models.DateField(null=True, verbose_name='Статистика за')),
                ('in_audience', models.BooleanField(db_index=True, default=False, verbose_name='Выводить в аудитории')),
                ('in_mediakit', models.BooleanField(db_index=True, default=False, verbose_name='Выводить в медиаките')),
                ('device_pc_percent', models.FloatField(default=0, verbose_name='Процент пк')),
                ('device_mobile_percent', models.FloatField(default=0, verbose_name='Процент мобильные')),
                ('audience_text', models.TextField(blank=True, verbose_name='Текст для раздела аудитории')),
                ('mediakit_title', models.CharField(blank=True, max_length=100, verbose_name='Название')),
                ('mediakit_color', utils.db.models.fields.color.ColorField(blank=True, help_text='В формате #13bf99', max_length=6, null=True, verbose_name='Цвет')),
                ('mediakit_main_screenshot', utils.fields.file.ImageRemovableField(blank=True, null=True, upload_to='img/site/about/mediakit', verbose_name='Главный скриншот')),
                ('mediakit_attraction_title', models.CharField(blank=True, max_length=100, verbose_name='Заголовок страницы в привликательности раздела')),
                ('mediakit_attraction_screenshot', utils.fields.file.ImageRemovableField(blank=True, null=True, upload_to='img/site/about/mediakit', verbose_name='Скриншот в привликательности раздела')),
                ('mediakit_attraction_text', models.TextField(blank=True, verbose_name='Текст для блока привлекательности раздела')),
                ('mediakit_statistic_title', models.CharField(blank=True, max_length=100, verbose_name='Заголовок страницы статистики')),
                ('mediakit_audience_title', models.CharField(blank=True, max_length=100, verbose_name='Заголовок страницы аудитори')),
                ('mediakit_benefit_title', models.CharField(blank=True, max_length=100, verbose_name='Заголовок страницы наиболее полезен')),
                ('mediakit_benefit_text', models.TextField(blank=True, verbose_name='Текст для блока наиболее полезен')),
                ('pages', models.ManyToManyField(blank=True, to='about.Page', verbose_name='Связаные прайсы')),
            ],
            options={
                'verbose_name': 'раздел',
                'verbose_name_plural': 'разделы',
                'ordering': ('position',),
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, verbose_name='Имя')),
                ('email', models.EmailField(max_length=254, verbose_name='E-mail')),
                ('content', models.TextField(verbose_name='Содержание')),
                ('ip', models.PositiveIntegerField(verbose_name='IP адрес')),
                ('user_agent', models.TextField(verbose_name='User Agent')),
                ('created', models.DateTimeField(verbose_name='Когда спросили')),
                ('reply', models.TextField(blank=True, verbose_name='Ответ')),
                ('replied', models.DateTimeField(blank=True, null=True, verbose_name='Дата ответа')),
                ('attach', utils.fields.file.FileRemovableField(blank=True, null=True, upload_to='img/site/about/attach/', verbose_name='Прикрепленный файл')),
                ('is_replied', models.BooleanField(default=False, verbose_name='Ответили')),
                ('respondent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='question_replies', to=settings.AUTH_USER_MODEL, verbose_name='Респондент')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='questions', to=settings.AUTH_USER_MODEL, verbose_name='Автор')),
            ],
            options={
                'verbose_name': 'вопрос',
                'verbose_name_plural': 'вопросы',
                'db_table': 'company_questions',
            },
        ),
        migrations.CreateModel(
            name='Price',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('format', models.CharField(max_length=100, verbose_name='Формат')),
                ('period', models.IntegerField(choices=[(1, 'за неделю'), (2, 'за публикацию'), (3, 'за сутки'), (8, 'за 2 суток'), (4, 'за месяц'), (5, 'мес. со статьей'), (6, 'за 6 мес.'), (7, 'за 12 мес.')], default=1, verbose_name='Период размещения')),
                ('marker_position', models.IntegerField(choices=[(1, 'сверху'), (2, 'снизу'), (3, 'справа'), (4, 'слева')], default=1, verbose_name='Позиция маркера')),
                ('place', models.CharField(max_length=100, verbose_name='Место')),
                ('value', models.CharField(max_length=100, verbose_name='Цена')),
                ('coordinate_top_left', models.CharField(default='0,0', help_text='Например: 230,340', max_length=11, verbose_name='Координата верхнего левого угла')),
                ('height_width', models.CharField(default='0,0', help_text='Например: 100,200', max_length=11, verbose_name='Высота и длинна')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('recommendation', models.TextField(blank=True, verbose_name='Рекомендация')),
                ('condition', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='about.condition', verbose_name='Требование')),
                ('page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='about.page')),
            ],
            options={
                'verbose_name': 'цена',
                'verbose_name_plural': 'цены',
                'db_table': 'company_price',
            },
        ),
        migrations.CreateModel(
            name='Interest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название')),
                ('percent', models.FloatField(default=0, verbose_name='Процент')),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='interests', to='about.section')),
            ],
            options={
                'verbose_name': 'интерес',
                'verbose_name_plural': 'интересы',
                'ordering': ('percent',),
            },
        ),
        migrations.CreateModel(
            name='AgeGenderPercent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('age', models.IntegerField(choices=[(1, 'младше 18'), (2, '18-24'), (3, '25-34'), (4, '35-44'), (5, '45-54'), (6, '55 и старше')], default=1, verbose_name='Возраст')),
                ('gender', models.IntegerField(choices=[(1, 'Мужчина'), (2, 'Женщина')], default=1, verbose_name='Пол')),
                ('percent', models.FloatField(default=0, verbose_name='Процент')),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='agegenderpercents', to='about.section')),
            ],
            options={
                'verbose_name': 'возраст-пол',
                'verbose_name_plural': 'возраст-пол',
                'ordering': ('section', 'age', 'gender'),
            },
        ),
    ]
